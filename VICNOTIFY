local Notification = {}
Notification.__index = Notification

local ts = game:GetService("TweenService")
local ss = game:GetService("SoundService")
local txtS = game:GetService("TextService")
local Players = game:GetService("Players")

local openSound = Instance.new("Sound")
local closeSound = Instance.new("Sound")

local notifications = Instance.new("ScreenGui")
local notifsHolderFrame = Instance.new("Frame")
local notifHolderListLayout = Instance.new("UIListLayout")
local errorTemplate = Instance.new("Frame")
local errorTemplateFrame = Instance.new("Frame")
local errorTemplateCorner = Instance.new("UICorner")
local errorSeverityFrame = Instance.new("Frame")
local errorSeverityCorner = Instance.new("UICorner")
local hideErrorSeverityCornerFrame = Instance.new("Frame")
local errorImage = Instance.new("ImageLabel")
local errorInformationFrame = Instance.new("Frame")
local errorHeadingText = Instance.new("TextLabel")
local errorBodyText = Instance.new("TextLabel")
local errorCornerHidingFrame = Instance.new("Frame")
local errorCloseButton = Instance.new("ImageButton")
local errorProgressBarFrame = Instance.new("Frame")
local errorProgressBar = Instance.new("Frame")
local infoTemplate = Instance.new("Frame")
local infoTemplateFrame = Instance.new("Frame")
local infoSeverityFrame = Instance.new("Frame")
local infoSeverityCorner = Instance.new("UICorner")
local hideInfoSeverityCornerFrame = Instance.new("Frame")
local infoImage = Instance.new("ImageLabel")
local infoInformationFrame = Instance.new("Frame")
local infoHeadingText = Instance.new("TextLabel")
local infoBodyText = Instance.new("TextLabel")
local infoCornerHidingFrame = Instance.new("Frame")
local infoCloseButton = Instance.new("ImageButton")
local infoTemplateCorner = Instance.new("UICorner")
local infoProgressBarFrame = Instance.new("Frame")
local infoProgressBar = Instance.new("Frame")
local messageTemplate = Instance.new("Frame")
local messageTemplateFrame = Instance.new("Frame")
local messageTemplateCorner = Instance.new("UICorner")
local messageSeverityFrame = Instance.new("Frame")
local messageSeverityCorner = Instance.new("UICorner")
local hideMessageSeverityCornerFrame = Instance.new("Frame")
local messageInformationFrame = Instance.new("Frame")
local messageHeadingText = Instance.new("TextLabel")
local messageBodyText = Instance.new("TextLabel")
local messageCornerHidingFrame = Instance.new("Frame")
local messageCloseButton = Instance.new("ImageButton")
local messageProgressBarFrame = Instance.new("Frame")
local messageProgressBar = Instance.new("Frame")
local successTemplate = Instance.new("Frame")
local successTemplateFrame = Instance.new("Frame")
local successTemplateCorner = Instance.new("UICorner")
local successSeverityFrame = Instance.new("Frame")
local successSeverityCorner = Instance.new("UICorner")
local hideSuccessSeverityCornerFrame = Instance.new("Frame")
local successImage = Instance.new("ImageLabel")
local successInformationFrame = Instance.new("Frame")
local successHeadingText = Instance.new("TextLabel")
local successBodyText = Instance.new("TextLabel")
local successCornerHidingFrame = Instance.new("Frame")
local successCloseButton = Instance.new("ImageButton")
local successProgressBarFrame = Instance.new("Frame")
local successProgressBar = Instance.new("Frame")
local warningTemplate = Instance.new("Frame")
local warningTemplateFrame = Instance.new("Frame")
local warningTemplateCorner = Instance.new("UICorner")
local warningSeverityFrame = Instance.new("Frame")
local warningSeverityCorner = Instance.new("UICorner")
local hideWarningSeverityCornerFrame = Instance.new("Frame")
local warningImage = Instance.new("ImageLabel")
local warningInformationFrame = Instance.new("Frame")
local warningHeadingText = Instance.new("TextLabel")
local warningBodyText = Instance.new("TextLabel")
local warningCornerHidingFrame = Instance.new("Frame")
local warningCloseButton = Instance.new("ImageButton")
local warningProgressBarFrame = Instance.new("Frame")
local warningProgressBar = Instance.new("Frame")

local function getParentGui()
    local success, result = pcall(function()
        return game:GetService("CoreGui")
    end)
    if success then
        return result
    else
        Notification.new("warning", "CoreGui Access Failed", "Falling back to PlayerGui.")
        return Players.LocalPlayer:WaitForChild("PlayerGui")
    end
end

local previousUiExists = getParentGui():FindFirstChild("notifications")
if previousUiExists then previousUiExists:Destroy() end

openSound.Name = "OpenNotifSound"
openSound.Volume = 25
openSound.SoundId = "rbxassetid://9128519965"
openSound.Parent = ss
pcall(function()
    game:GetService("ContentProvider"):PreloadAsync({openSound})
end)

closeSound.Name = "CloseNotifSound"
closeSound.Volume = 25
closeSound.SoundId = "rbxassetid://9128519965"
closeSound.Parent = ss
pcall(function()
    game:GetService("ContentProvider"):PreloadAsync({closeSound})
end)

notifications.Name = "notifications"
notifications.Parent = getParentGui()
notifications.ZIndexBehavior = Enum.ZIndexBehavior.Global
notifications.ResetOnSpawn = false

notifsHolderFrame.Name = "notifsHolderFrame"
notifsHolderFrame.Parent = notifications
notifsHolderFrame.AnchorPoint = Vector2.new(1, 0)
notifsHolderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
notifsHolderFrame.BackgroundTransparency = 1
notifsHolderFrame.BorderSizePixel = 0
notifsHolderFrame.ClipsDescendants = true
notifsHolderFrame.Position = UDim2.new(1, -10, 0, 50)
notifsHolderFrame.Size = UDim2.fromScale(0.3, 0.4)

notifHolderListLayout.Name = "notifHolderListLayout"
notifHolderListLayout.Parent = notifsHolderFrame
notifHolderListLayout.SortOrder = Enum.SortOrder.LayoutOrder
notifHolderListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
notifHolderListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
notifHolderListLayout.Padding = UDim.new(0, 6)

errorTemplate.Name = "error"
errorTemplate.AnchorPoint = Vector2.new(1, 0)
errorTemplate.BackgroundColor3 = Color3.fromRGB(255, 207, 203)
errorTemplate.BorderSizePixel = 0
errorTemplate.BackgroundTransparency = 1
errorTemplate.Position = UDim2.new(1, 0, 0, 0)
errorTemplate.Size = UDim2.new(1, 0, 0, 50)

errorTemplateFrame.Name = "templateFrame"
errorTemplateFrame.Parent = errorTemplate
errorTemplateFrame.BackgroundColor3 = Color3.fromRGB(255, 207, 203)
errorTemplateFrame.BorderSizePixel = 0
errorTemplateFrame.Size = UDim2.new(1, 0, 1, 0)

local errorGradient = Instance.new("UIGradient")
errorGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 207, 203)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 207, 203):Lerp(Color3.fromRGB(200, 200, 200), 0.3))
})
errorGradient.Rotation = 45
errorGradient.Parent = errorTemplateFrame

local errorStroke = Instance.new("UIStroke")
errorStroke.Thickness = 3
errorStroke.Color = Color3.fromRGB(236, 88, 76)
errorStroke.Transparency = 0.5
errorStroke.Parent = errorTemplateFrame

errorTemplateCorner.Name = "templateCorner"
errorTemplateCorner.CornerRadius = UDim.new(0, 12)
errorTemplateCorner.Parent = errorTemplateFrame

errorSeverityFrame.Name = "severityFrame"
errorSeverityFrame.Parent = errorTemplateFrame
errorSeverityFrame.BackgroundColor3 = Color3.fromRGB(236, 88, 76)
errorSeverityFrame.Size = UDim2.new(0, 12, 1, 0)

errorSeverityCorner.Name = "severityCorner"
errorSeverityCorner.CornerRadius = UDim.new(0, 12)
errorSeverityCorner.Parent = errorSeverityFrame

hideErrorSeverityCornerFrame.Name = "hideSeverityCornerFrame"
hideErrorSeverityCornerFrame.Parent = errorSeverityFrame
hideErrorSeverityCornerFrame.BackgroundColor3 = Color3.fromRGB(255, 207, 203)
hideErrorSeverityCornerFrame.BorderSizePixel = 0
hideErrorSeverityCornerFrame.Position = UDim2.new(0.5, 0, 0, 0)
hideErrorSeverityCornerFrame.Size = UDim2.new(0.5, 0, 1, 0)

errorImage.Name = "image"
errorImage.Parent = errorTemplateFrame
errorImage.AnchorPoint = Vector2.new(0, 0.5)
errorImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorImage.BackgroundTransparency = 1
errorImage.BorderSizePixel = 0
errorImage.Position = UDim2.new(0, 20, 0.5, 0)
errorImage.Size = UDim2.new(0, 24, 0, 24)
errorImage.Image = "rbxassetid://9072920609"
errorImage.ImageColor3 = Color3.fromRGB(236, 88, 76)

errorInformationFrame.Name = "informationFrame"
errorInformationFrame.Parent = errorTemplateFrame
errorInformationFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorInformationFrame.BackgroundTransparency = 1
errorInformationFrame.BorderSizePixel = 0
errorInformationFrame.Position = UDim2.new(0, 50, 0, 5)
errorInformationFrame.Size = UDim2.new(1, -80, 1, -10)

errorHeadingText.Name = "headingText"
errorHeadingText.Parent = errorInformationFrame
errorHeadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorHeadingText.BackgroundTransparency = 1
errorHeadingText.BorderSizePixel = 0
errorHeadingText.ClipsDescendants = true
errorHeadingText.Size = UDim2.new(1, 0, 0, 24)
errorHeadingText.Font = Enum.Font.GothamBold
errorHeadingText.Text = "Error"
errorHeadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
errorHeadingText.TextSize = 16
errorHeadingText.TextXAlignment = Enum.TextXAlignment.Left
errorHeadingText.TextYAlignment = Enum.TextYAlignment.Bottom

local errorHeadingStroke = Instance.new("UIStroke")
errorHeadingStroke.Thickness = 1
errorHeadingStroke.Color = Color3.fromRGB(236, 88, 76)
errorHeadingStroke.Transparency = 0.5
errorHeadingStroke.Parent = errorHeadingText

errorBodyText.Name = "bodyText"
errorBodyText.Parent = errorInformationFrame
errorBodyText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorBodyText.BackgroundTransparency = 1
errorBodyText.BorderSizePixel = 0
errorBodyText.ClipsDescendants = true
errorBodyText.Position = UDim2.new(0, 0, 0, 26)
errorBodyText.Size = UDim2.new(1, 0, 1, -26)
errorBodyText.Font = Enum.Font.GothamMedium
errorBodyText.Text = "Error message"
errorBodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
errorBodyText.TextSize = 14
errorBodyText.TextWrapped = true
errorBodyText.TextXAlignment = Enum.TextXAlignment.Left
errorBodyText.TextYAlignment = Enum.TextYAlignment.Top

errorCornerHidingFrame.Name = "cornerHidingFrame"
errorCornerHidingFrame.Parent = errorTemplateFrame
errorCornerHidingFrame.AnchorPoint = Vector2.new(1, 0)
errorCornerHidingFrame.BackgroundColor3 = Color3.fromRGB(255, 207, 203)
errorCornerHidingFrame.BorderSizePixel = 0
errorCornerHidingFrame.Position = UDim2.new(1, 0, 0, 0)
errorCornerHidingFrame.Size = UDim2.new(.1, 0, 1, 0)
errorCornerHidingFrame.ZIndex = 0

errorCloseButton.Name = "closeButton"
errorCloseButton.Parent = errorTemplateFrame
errorCloseButton.AnchorPoint = Vector2.new(1, 0.5)
errorCloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorCloseButton.BackgroundTransparency = 1
errorCloseButton.BorderSizePixel = 0
errorCloseButton.Position = UDim2.new(1, -10, 0.5, 0)
errorCloseButton.Size = UDim2.new(0, 18, 0, 18)
errorCloseButton.Image = "rbxassetid://9127524477"
errorCloseButton.ImageColor3 = Color3.fromRGB(236, 88, 76)

errorProgressBarFrame.Name = "progressBarFrame"
errorProgressBarFrame.Parent = errorTemplateFrame
errorProgressBarFrame.BackgroundColor3 = Color3.fromRGB(236, 88, 76)
errorProgressBarFrame.BorderSizePixel = 0
errorProgressBarFrame.Position = UDim2.new(0, 0, 1, -5)
errorProgressBarFrame.Size = UDim2.new(1, 0, 0, 5)
errorProgressBarFrame.ClipsDescendants = true

local errorProgressStroke = Instance.new("UIStroke")
errorProgressStroke.Thickness = 1
errorProgressStroke.Color = Color3.fromRGB(255, 255, 255)
errorProgressStroke.Transparency = 0.7
errorProgressStroke.Parent = errorProgressBarFrame

local errorProgressGradient = Instance.new("UIGradient")
errorProgressGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(236, 88, 76)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(236, 88, 76))
})
errorProgressGradient.Parent = errorProgressBarFrame

errorProgressBar.Name = "progressBar"
errorProgressBar.Parent = errorProgressBarFrame
errorProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
errorProgressBar.BackgroundTransparency = 0.2
errorProgressBar.BorderSizePixel = 0
errorProgressBar.Size = UDim2.new(1, 0, 1, 0)

infoTemplate.Name = "info"
infoTemplate.AnchorPoint = Vector2.new(1, 0)
infoTemplate.BackgroundColor3 = Color3.fromRGB(204, 226, 254)
infoTemplate.BorderSizePixel = 0
infoTemplate.BackgroundTransparency = 1
infoTemplate.Position = UDim2.new(1, 0, 0, 0)
infoTemplate.Size = UDim2.new(1, 0, 0, 50)

infoTemplateFrame.Name = "templateFrame"
infoTemplateFrame.Parent = infoTemplate
infoTemplateFrame.BackgroundColor3 = Color3.fromRGB(204, 226, 254)
infoTemplateFrame.BorderSizePixel = 0
infoTemplateFrame.Size = UDim2.new(1, 0, 1, 0)

local infoGradient = Instance.new("UIGradient")
infoGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(204, 226, 254)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(204, 226, 254):Lerp(Color3.fromRGB(200, 200, 200), 0.3))
})
infoGradient.Rotation = 45
infoGradient.Parent = infoTemplateFrame

local infoStroke = Instance.new("UIStroke")
infoStroke.Thickness = 3
infoStroke.Color = Color3.fromRGB(50, 131, 226)
infoStroke.Transparency = 0.5
infoStroke.Parent = infoTemplateFrame

infoSeverityFrame.Name = "severityFrame"
infoSeverityFrame.Parent = infoTemplateFrame
infoSeverityFrame.BackgroundColor3 = Color3.fromRGB(50, 131, 226)
infoSeverityFrame.Size = UDim2.new(0, 12, 1, 0)

infoSeverityCorner.Name = "severityCorner"
infoSeverityCorner.CornerRadius = UDim.new(0, 12)
infoSeverityCorner.Parent = infoSeverityFrame

hideInfoSeverityCornerFrame.Name = "hideSeverityCornerFrame"
hideInfoSeverityCornerFrame.Parent = infoSeverityFrame
hideInfoSeverityCornerFrame.BackgroundColor3 = Color3.fromRGB(204, 226, 254)
hideInfoSeverityCornerFrame.BorderSizePixel = 0
hideInfoSeverityCornerFrame.Position = UDim2.new(0.5, 0, 0, 0)
hideInfoSeverityCornerFrame.Size = UDim2.new(0.5, 0, 1, 0)

infoImage.Name = "image"
infoImage.Parent = infoTemplateFrame
infoImage.AnchorPoint = Vector2.new(0, 0.5)
infoImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoImage.BackgroundTransparency = 1
infoImage.BorderSizePixel = 0
infoImage.Position = UDim2.new(0, 20, 0.5, 0)
infoImage.Size = UDim2.new(0, 24, 0, 24)
infoImage.Image = "rbxassetid://9072944922"
infoImage.ImageColor3 = Color3.fromRGB(50, 131, 226)

infoInformationFrame.Name = "informationFrame"
infoInformationFrame.Parent = infoTemplateFrame
infoInformationFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoInformationFrame.BackgroundTransparency = 1
infoInformationFrame.BorderSizePixel = 0
infoInformationFrame.Position = UDim2.new(0, 50, 0, 5)
infoInformationFrame.Size = UDim2.new(1, -80, 1, -10)

infoHeadingText.Name = "headingText"
infoHeadingText.Parent = infoInformationFrame
infoHeadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoHeadingText.BackgroundTransparency = 1
infoHeadingText.BorderSizePixel = 0
infoHeadingText.ClipsDescendants = true
infoHeadingText.Size = UDim2.new(1, 0, 0, 24)
infoHeadingText.Font = Enum.Font.GothamBold
infoHeadingText.Text = "Information"
infoHeadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
infoHeadingText.TextSize = 16
infoHeadingText.TextXAlignment = Enum.TextXAlignment.Left
infoHeadingText.TextYAlignment = Enum.TextYAlignment.Bottom

local infoHeadingStroke = Instance.new("UIStroke")
infoHeadingStroke.Thickness = 1
infoHeadingStroke.Color = Color3.fromRGB(50, 131, 226)
infoHeadingStroke.Transparency = 0.5
infoHeadingStroke.Parent = infoHeadingText

infoBodyText.Name = "bodyText"
infoBodyText.Parent = infoInformationFrame
infoBodyText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoBodyText.BackgroundTransparency = 1
infoBodyText.BorderSizePixel = 0
infoBodyText.ClipsDescendants = true
infoBodyText.Position = UDim2.new(0, 0, 0, 26)
infoBodyText.Size = UDim2.new(1, 0, 1, -26)
infoBodyText.Font = Enum.Font.GothamMedium
infoBodyText.Text = "Information message"
infoBodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
infoBodyText.TextSize = 14
infoBodyText.TextWrapped = true
infoBodyText.TextXAlignment = Enum.TextXAlignment.Left
infoBodyText.TextYAlignment = Enum.TextYAlignment.Top

infoCornerHidingFrame.Name = "cornerHidingFrame"
infoCornerHidingFrame.Parent = infoTemplateFrame
infoCornerHidingFrame.AnchorPoint = Vector2.new(1, 0)
infoCornerHidingFrame.BackgroundColor3 = Color3.fromRGB(204, 226, 254)
infoCornerHidingFrame.BorderSizePixel = 0
infoCornerHidingFrame.Position = UDim2.new(1, 0, 0, 0)
infoCornerHidingFrame.Size = UDim2.new(.1, 0, 1, 0)
infoCornerHidingFrame.ZIndex = 0

infoCloseButton.Name = "closeButton"
infoCloseButton.Parent = infoTemplateFrame
infoCloseButton.AnchorPoint = Vector2.new(1, 0.5)
infoCloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoCloseButton.BackgroundTransparency = 1
infoCloseButton.BorderSizePixel = 0
infoCloseButton.Position = UDim2.new(1, -10, 0.5, 0)
infoCloseButton.Size = UDim2.new(0, 18, 0, 18)
infoCloseButton.Image = "rbxassetid://9127564477"
infoCloseButton.ImageColor3 = Color3.fromRGB(50, 131, 226)

infoTemplateCorner.Name = "templateCorner"
infoTemplateCorner.CornerRadius = UDim.new(0, 12)
infoTemplateCorner.Parent = infoTemplateFrame

infoProgressBarFrame.Name = "progressBarFrame"
infoProgressBarFrame.Parent = infoTemplateFrame
infoProgressBarFrame.BackgroundColor3 = Color3.fromRGB(50, 131, 226)
infoProgressBarFrame.BorderSizePixel = 0
infoProgressBarFrame.Position = UDim2.new(0, 0, 1, -5)
infoProgressBarFrame.Size = UDim2.new(1, 0, 0, 5)
infoProgressBarFrame.ClipsDescendants = true

local infoProgressStroke = Instance.new("UIStroke") -- rawr
infoProgressStroke.Thickness = 1
infoProgressStroke.Color = Color3.fromRGB(255, 255, 255)
infoProgressStroke.Transparency = 0.7
infoProgressStroke.Parent = infoProgressBarFrame

local infoProgressGradient = Instance.new("UIGradient")
infoProgressGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 131, 226)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 131, 226))
})
infoProgressGradient.Parent = infoProgressBarFrame

infoProgressBar.Name = "progressBar"
infoProgressBar.Parent = infoProgressBarFrame
infoProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
infoProgressBar.BackgroundTransparency = 0.2
infoProgressBar.BorderSizePixel = 0
infoProgressBar.Size = UDim2.new(1, 0, 1, 0)

messageTemplate.Name = "message"
messageTemplate.AnchorPoint = Vector2.new(1, 0)
messageTemplate.BackgroundColor3 = Color3.fromRGB(233, 233, 235)
messageTemplate.BorderSizePixel = 0
messageTemplate.BackgroundTransparency = 1
messageTemplate.Position = UDim2.new(1, 0, 0, 0)
messageTemplate.Size = UDim2.new(1, 0, 0, 50)

messageTemplateFrame.Name = "templateFrame"
messageTemplateFrame.Parent = messageTemplate
messageTemplateFrame.BackgroundColor3 = Color3.fromRGB(233, 233, 235)
messageTemplateFrame.BorderSizePixel = 0
messageTemplateFrame.Size = UDim2.new(1, 0, 1, 0)

local messageGradient = Instance.new("UIGradient")
messageGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(233, 233, 235)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(233, 233, 235):Lerp(Color3.fromRGB(200, 200, 200), 0.3))
})
messageGradient.Rotation = 45
messageGradient.Parent = messageTemplateFrame

local messageStroke = Instance.new("UIStroke")
messageStroke.Thickness = 3
messageStroke.Color = Color3.fromRGB(112, 118, 130)
messageStroke.Transparency = 0.5
messageStroke.Parent = messageTemplateFrame

messageTemplateCorner.Name = "templateCorner"
messageTemplateCorner.CornerRadius = UDim.new(0, 12)
messageTemplateCorner.Parent = messageTemplateFrame

messageSeverityFrame.Name = "severityFrame"
messageSeverityFrame.Parent = messageTemplateFrame
messageSeverityFrame.BackgroundColor3 = Color3.fromRGB(112, 118, 130)
messageSeverityFrame.Size = UDim2.new(0, 12, 1, 0)

messageSeverityCorner.Name = "severityCorner"
messageSeverityCorner.CornerRadius = UDim.new(0, 12)
messageSeverityCorner.Parent = messageSeverityFrame

hideMessageSeverityCornerFrame.Name = "hideSeverityCornerFrame"
hideMessageSeverityCornerFrame.Parent = messageSeverityFrame
hideMessageSeverityCornerFrame.BackgroundColor3 = Color3.fromRGB(233, 233, 235)
hideMessageSeverityCornerFrame.BorderSizePixel = 0
hideMessageSeverityCornerFrame.Position = UDim2.new(0.5, 0, 0, 0)
hideMessageSeverityCornerFrame.Size = UDim2.new(0.5, 0, 1, 0)

messageInformationFrame.Name = "informationFrame"
messageInformationFrame.Parent = messageTemplateFrame
messageInformationFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
messageInformationFrame.BackgroundTransparency = 1
messageInformationFrame.BorderSizePixel = 0
messageInformationFrame.Position = UDim2.new(0, 20, 0, 5)
messageInformationFrame.Size = UDim2.new(1, -50, 1, -10)

messageHeadingText.Name = "headingText"
messageHeadingText.Parent = messageInformationFrame
messageHeadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
messageHeadingText.BackgroundTransparency = 1
messageHeadingText.BorderSizePixel = 0
messageHeadingText.ClipsDescendants = true
messageHeadingText.Size = UDim2.new(1, 0, 0, 24)
messageHeadingText.Font = Enum.Font.GothamBold
messageHeadingText.Text = "Custom message"
messageHeadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
messageHeadingText.TextSize = 16
messageHeadingText.TextXAlignment = Enum.TextXAlignment.Left
messageHeadingText.TextYAlignment = Enum.TextYAlignment.Bottom

local messageHeadingStroke = Instance.new("UIStroke")
messageHeadingStroke.Thickness = 1
messageHeadingStroke.Color = Color3.fromRGB(112, 118, 130)
messageHeadingStroke.Transparency = 0.5
messageHeadingStroke.Parent = messageHeadingText

messageBodyText.Name = "bodyText"
messageBodyText.Parent = messageInformationFrame
messageBodyText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
messageBodyText.BackgroundTransparency = 1
messageBodyText.BorderSizePixel = 0
messageBodyText.ClipsDescendants = true
messageBodyText.Position = UDim2.new(0, 0, 0, 26)
messageBodyText.Size = UDim2.new(1, 0, 1, -26)
messageBodyText.Font = Enum.Font.GothamMedium
messageBodyText.Text = "Custom message"
messageBodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
messageBodyText.TextSize = 14
messageBodyText.TextWrapped = true
messageBodyText.TextXAlignment = Enum.TextXAlignment.Left
messageBodyText.TextYAlignment = Enum.TextYAlignment.Top

messageCornerHidingFrame.Name = "cornerHidingFrame"
messageCornerHidingFrame.Parent = messageTemplateFrame
messageCornerHidingFrame.AnchorPoint = Vector2.new(1, 0)
messageCornerHidingFrame.BackgroundColor3 = Color3.fromRGB(233, 233, 235)
messageCornerHidingFrame.BorderSizePixel = 0
messageCornerHidingFrame.Position = UDim2.new(1, 0, 0, 0)
messageCornerHidingFrame.Size = UDim2.new(.1, 0, 1, 0)
messageCornerHidingFrame.ZIndex = 0

messageCloseButton.Name = "closeButton"
messageCloseButton.Parent = messageTemplateFrame
messageCloseButton.AnchorPoint = Vector2.new(1, 0.5)
messageCloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
messageCloseButton.BackgroundTransparency = 1
messageCloseButton.BorderSizePixel = 0
messageCloseButton.Position = UDim2.new(1, -10, 0.5, 0)
messageCloseButton.Size = UDim2.new(0, 18, 0, 18)
messageCloseButton.Image = "rbxassetid://9127564477"
messageCloseButton.ImageColor3 = Color3.fromRGB(112, 118, 130)

messageProgressBarFrame.Name = "progressBarFrame"
messageProgressBarFrame.Parent = messageTemplateFrame
messageProgressBarFrame.BackgroundColor3 = Color3.fromRGB(112, 118, 130)
messageProgressBarFrame.BorderSizePixel = 0
messageProgressBarFrame.Position = UDim2.new(0, 0, 1, -5)
messageProgressBarFrame.Size = UDim2.new(1, 0, 0, 5)
messageProgressBarFrame.ClipsDescendants = true

local messageProgressStroke = Instance.new("UIStroke")
messageProgressStroke.Thickness = 1
messageProgressStroke.Color = Color3.fromRGB(255, 255, 255)
messageProgressStroke.Transparency = 0.7
messageProgressStroke.Parent = messageProgressBarFrame

local messageProgressGradient = Instance.new("UIGradient")
messageProgressGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(112, 118, 130)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(112, 118, 130))
})
messageProgressGradient.Parent = messageProgressBarFrame

messageProgressBar.Name = "progressBar"
messageProgressBar.Parent = messageProgressBarFrame
messageProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
messageProgressBar.BackgroundTransparency = 0.2
messageProgressBar.BorderSizePixel = 0
messageProgressBar.Size = UDim2.new(1, 0, 1, 0)

successTemplate.Name = "success"
successTemplate.AnchorPoint = Vector2.new(1, 0)
successTemplate.BackgroundColor3 = Color3.fromRGB(196, 247, 221)
successTemplate.BorderSizePixel = 0
successTemplate.BackgroundTransparency = 1
successTemplate.Position = UDim2.new(1, 0, 0, 0)
successTemplate.Size = UDim2.new(1, 0, 0, 50)

successTemplateFrame.Name = "templateFrame"
successTemplateFrame.Parent = successTemplate
successTemplateFrame.BackgroundColor3 = Color3.fromRGB(196, 247, 221)
successTemplateFrame.BorderSizePixel = 0
successTemplateFrame.Size = UDim2.new(1, 0, 1, 0)

local successGradient = Instance.new("UIGradient")
successGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(196, 247, 221)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(196, 247, 221):Lerp(Color3.fromRGB(200, 200, 200), 0.3))
})
successGradient.Rotation = 45
successGradient.Parent = successTemplateFrame

local successStroke = Instance.new("UIStroke")
successStroke.Thickness = 3
successStroke.Color = Color3.fromRGB(50, 195, 125)
successStroke.Transparency = 0.5
successStroke.Parent = successTemplateFrame

successTemplateCorner.Name = "templateCorner"
successTemplateCorner.CornerRadius = UDim.new(0, 12)
successTemplateCorner.Parent = successTemplateFrame

successSeverityFrame.Name = "severityFrame"
successSeverityFrame.Parent = successTemplateFrame
successSeverityFrame.BackgroundColor3 = Color3.fromRGB(50, 195, 125)
successSeverityFrame.Size = UDim2.new(0, 12, 1, 0)

successSeverityCorner.Name = "severityCorner"
successSeverityCorner.CornerRadius = UDim.new(0, 12)
successSeverityCorner.Parent = successSeverityFrame

hideSuccessSeverityCornerFrame.Name = "hideSeverityCornerFrame"
hideSuccessSeverityCornerFrame.Parent = successSeverityFrame
hideSuccessSeverityCornerFrame.BackgroundColor3 = Color3.fromRGB(196, 247, 221)
hideSuccessSeverityCornerFrame.BorderSizePixel = 0
hideSuccessSeverityCornerFrame.Position = UDim2.new(0.5, 0, 0, 0)
hideSuccessSeverityCornerFrame.Size = UDim2.new(0.5, 0, 1, 0)

successImage.Name = "image"
successImage.Parent = successTemplateFrame
successImage.AnchorPoint = Vector2.new(0, 0.5)
successImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successImage.BackgroundTransparency = 1
successImage.BorderSizePixel = 0
successImage.Position = UDim2.new(0, 20, 0.5, 0)
successImage.Size = UDim2.new(0, 24, 0, 24)
successImage.Image = "rbxassetid://9073052584"
successImage.ImageColor3 = Color3.fromRGB(50, 195, 125)

successInformationFrame.Name = "informationFrame"
successInformationFrame.Parent = successTemplateFrame
successInformationFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successInformationFrame.BackgroundTransparency = 1
successInformationFrame.BorderSizePixel = 0
successInformationFrame.Position = UDim2.new(0, 50, 0, 5)
successInformationFrame.Size = UDim2.new(1, -80, 1, -10)

successHeadingText.Name = "headingText"
successHeadingText.Parent = successInformationFrame
successHeadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successHeadingText.BackgroundTransparency = 1
successHeadingText.BorderSizePixel = 0
successHeadingText.ClipsDescendants = true
successHeadingText.Size = UDim2.new(1, 0, 0, 24)
successHeadingText.Font = Enum.Font.GothamBold
successHeadingText.Text = "Success"
successHeadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
successHeadingText.TextSize = 16
successHeadingText.TextXAlignment = Enum.TextXAlignment.Left
successHeadingText.TextYAlignment = Enum.TextYAlignment.Bottom

local successHeadingStroke = Instance.new("UIStroke")
successHeadingStroke.Thickness = 1
successHeadingStroke.Color = Color3.fromRGB(50, 195, 125)
successHeadingStroke.Transparency = 0.5
successHeadingStroke.Parent = successHeadingText

successBodyText.Name = "bodyText"
successBodyText.Parent = successInformationFrame
successBodyText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successBodyText.BackgroundTransparency = 1
successBodyText.BorderSizePixel = 0
successBodyText.ClipsDescendants = true
successBodyText.Position = UDim2.new(0, 0, 0, 26)
successBodyText.Size = UDim2.new(1, 0, 1, -26)
successBodyText.Font = Enum.Font.GothamMedium
successBodyText.Text = "Success message"
successBodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
successBodyText.TextSize = 14
successBodyText.TextWrapped = true
successBodyText.TextXAlignment = Enum.TextXAlignment.Left
successBodyText.TextYAlignment = Enum.TextYAlignment.Top

successCornerHidingFrame.Name = "cornerHidingFrame"
successCornerHidingFrame.Parent = successTemplateFrame
successCornerHidingFrame.AnchorPoint = Vector2.new(1, 0)
successCornerHidingFrame.BackgroundColor3 = Color3.fromRGB(196, 247, 221)
successCornerHidingFrame.BorderSizePixel = 0
successCornerHidingFrame.Position = UDim2.new(1, 0, 0, 0)
successCornerHidingFrame.Size = UDim2.new(.1, 0, 1, 0)
successCornerHidingFrame.ZIndex = 0

successCloseButton.Name = "closeButton"
successCloseButton.Parent = successTemplateFrame
successCloseButton.AnchorPoint = Vector2.new(1, 0.5)
successCloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successCloseButton.BackgroundTransparency = 1
successCloseButton.BorderSizePixel = 0
successCloseButton.Position = UDim2.new(1, -10, 0.5, 0)
successCloseButton.Size = UDim2.new(0, 18, 0, 18)
successCloseButton.Image = "rbxassetid://9127564477"
successCloseButton.ImageColor3 = Color3.fromRGB(50, 195, 125)

successProgressBarFrame.Name = "progressBarFrame"
successProgressBarFrame.Parent = successTemplateFrame
successProgressBarFrame.BackgroundColor3 = Color3.fromRGB(50, 195, 125)
successProgressBarFrame.BorderSizePixel = 0
successProgressBarFrame.Position = UDim2.new(0, 0, 1, -5)
successProgressBarFrame.Size = UDim2.new(1, 0, 0, 5)
successProgressBarFrame.ClipsDescendants = true

local successProgressStroke = Instance.new("UIStroke")
successProgressStroke.Thickness = 1
successProgressStroke.Color = Color3.fromRGB(255, 255, 255)
successProgressStroke.Transparency = 0.7
successProgressStroke.Parent = successProgressBarFrame

local successProgressGradient = Instance.new("UIGradient")
successProgressGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 195, 125)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 195, 125))
})
successProgressGradient.Parent = successProgressBarFrame

successProgressBar.Name = "progressBar"
successProgressBar.Parent = successProgressBarFrame
successProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
successProgressBar.BackgroundTransparency = 0.2
successProgressBar.BorderSizePixel = 0
successProgressBar.Size = UDim2.new(1, 0, 1, 0)

warningTemplate.Name = "warning"
warningTemplate.AnchorPoint = Vector2.new(1, 0)
warningTemplate.BackgroundColor3 = Color3.fromRGB(255, 232, 197)
warningTemplate.BorderSizePixel = 0
warningTemplate.BackgroundTransparency = 1
warningTemplate.Position = UDim2.new(1, 0, 0, 0)
warningTemplate.Size = UDim2.new(1, 0, 0, 50)

warningTemplateFrame.Name = "templateFrame"
warningTemplateFrame.Parent = warningTemplate
warningTemplateFrame.BackgroundColor3 = Color3.fromRGB(255, 232, 197)
warningTemplateFrame.BorderSizePixel = 0
warningTemplateFrame.Size = UDim2.new(1, 0, 1, 0)

local warningGradient = Instance.new("UIGradient")
warningGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 232, 197)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 232, 197):Lerp(Color3.fromRGB(200, 200, 200), 0.3))
})
warningGradient.Rotation = 45
warningGradient.Parent = warningTemplateFrame

local warningStroke = Instance.new("UIStroke")
warningStroke.Thickness = 3
warningStroke.Color = Color3.fromRGB(234, 159, 53)
warningStroke.Transparency = 0.5
warningStroke.Parent = warningTemplateFrame

warningTemplateCorner.Name = "templateCorner"
warningTemplateCorner.CornerRadius = UDim.new(0, 12)
warningTemplateCorner.Parent = warningTemplateFrame

warningSeverityFrame.Name = "severityFrame"
warningSeverityFrame.Parent = warningTemplateFrame
warningSeverityFrame.BackgroundColor3 = Color3.fromRGB(234, 159, 53)
warningSeverityFrame.Size = UDim2.new(0, 12, 1, 0)

warningSeverityCorner.Name = "severityCorner"
warningSeverityCorner.CornerRadius = UDim.new(0, 12)
warningSeverityCorner.Parent = warningSeverityFrame

hideWarningSeverityCornerFrame.Name = "hideSeverityCornerFrame"
hideWarningSeverityCornerFrame.Parent = warningSeverityFrame
hideWarningSeverityCornerFrame.BackgroundColor3 = Color3.fromRGB(255, 232, 197)
hideWarningSeverityCornerFrame.BorderSizePixel = 0
hideWarningSeverityCornerFrame.Position = UDim2.new(0.5, 0, 0, 0)
hideWarningSeverityCornerFrame.Size = UDim2.new(0.5, 0, 1, 0)

warningImage.Name = "image"
warningImage.Parent = warningTemplateFrame
warningImage.AnchorPoint = Vector2.new(0, 0.5)
warningImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningImage.BackgroundTransparency = 1
warningImage.BorderSizePixel = 0
warningImage.Position = UDim2.new(0, 20, 0.5, 0)
warningImage.Size = UDim2.new(0, 24, 0, 24)
warningImage.Image = "rbxassetid://9072448788"
warningImage.ImageColor3 = Color3.fromRGB(234, 159, 53)

warningInformationFrame.Name = "informationFrame"
warningInformationFrame.Parent = warningTemplateFrame
warningInformationFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningInformationFrame.BackgroundTransparency = 1
warningInformationFrame.BorderSizePixel = 0
warningInformationFrame.Position = UDim2.new(0, 50, 0, 5)
warningInformationFrame.Size = UDim2.new(1, -80, 1, -10)

warningHeadingText.Name = "headingText"
warningHeadingText.Parent = warningInformationFrame
warningHeadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningHeadingText.BackgroundTransparency = 1
warningHeadingText.BorderSizePixel = 0
warningHeadingText.ClipsDescendants = true
warningHeadingText.Size = UDim2.new(1, 0, 0, 24)
warningHeadingText.Font = Enum.Font.GothamBold
warningHeadingText.Text = "Warning"
warningHeadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
warningHeadingText.TextSize = 16
warningHeadingText.TextXAlignment = Enum.TextXAlignment.Left
warningHeadingText.TextYAlignment = Enum.TextYAlignment.Bottom

local warningHeadingStroke = Instance.new("UIStroke")
warningHeadingStroke.Thickness = 1
warningHeadingStroke.Color = Color3.fromRGB(234, 159, 53)
warningHeadingStroke.Transparency = 0.5
warningHeadingStroke.Parent = warningHeadingText

warningBodyText.Name = "bodyText"
warningBodyText.Parent = warningInformationFrame
warningBodyText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningBodyText.BackgroundTransparency = 1
warningBodyText.BorderSizePixel = 0
warningBodyText.ClipsDescendants = true
warningBodyText.Position = UDim2.new(0, 0, 0, 26)
warningBodyText.Size = UDim2.new(1, 0, 1, -26)
warningBodyText.Font = Enum.Font.GothamMedium
warningBodyText.Text = "Warning message"
warningBodyText.TextColor3 = Color3.fromRGB(255, 255, 255)
warningBodyText.TextSize = 14
warningBodyText.TextWrapped = true
warningBodyText.TextXAlignment = Enum.TextXAlignment.Left
warningBodyText.TextYAlignment = Enum.TextYAlignment.Top

warningCornerHidingFrame.Name = "cornerHidingFrame"
warningCornerHidingFrame.Parent = warningTemplateFrame
warningCornerHidingFrame.AnchorPoint = Vector2.new(1, 0)
warningCornerHidingFrame.BackgroundColor3 = Color3.fromRGB(255, 232, 197)
warningCornerHidingFrame.BorderSizePixel = 0
warningCornerHidingFrame.Position = UDim2.new(1, 0, 0, 0)
warningCornerHidingFrame.Size = UDim2.new(.1, 0, 1, 0)
warningCornerHidingFrame.ZIndex = 0

warningCloseButton.Name = "closeButton"
warningCloseButton.Parent = warningTemplateFrame
warningCloseButton.AnchorPoint = Vector2.new(1, 0.5)
warningCloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningCloseButton.BackgroundTransparency = 1
warningCloseButton.BorderSizePixel = 0
warningCloseButton.Position = UDim2.new(1, -10, 0.5, 0)
warningCloseButton.Size = UDim2.new(0, 18, 0, 18)
warningCloseButton.Image = "rbxassetid://9127564477"
warningCloseButton.ImageColor3 = Color3.fromRGB(234, 159, 53)

warningProgressBarFrame.Name = "progressBarFrame"
warningProgressBarFrame.Parent = warningTemplateFrame
warningProgressBarFrame.BackgroundColor3 = Color3.fromRGB(234, 159, 53)
warningProgressBarFrame.BorderSizePixel = 0
warningProgressBarFrame.Position = UDim2.new(0, 0, 1, -5)
warningProgressBarFrame.Size = UDim2.new(1, 0, 0, 5)
warningProgressBarFrame.ClipsDescendants = true

local warningProgressStroke = Instance.new("UIStroke")
warningProgressStroke.Thickness = 1
warningProgressStroke.Color = Color3.fromRGB(255, 255, 255)
warningProgressStroke.Transparency = 0.7
warningProgressStroke.Parent = warningProgressBarFrame

local warningProgressGradient = Instance.new("UIGradient")
warningProgressGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(234, 159, 53)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(234, 159, 53))
})
warningProgressGradient.Parent = warningProgressBarFrame

warningProgressBar.Name = "progressBar"
warningProgressBar.Parent = warningProgressBarFrame
warningProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
warningProgressBar.BackgroundTransparency = 0.2
warningProgressBar.BorderSizePixel = 0
warningProgressBar.Size = UDim2.new(1, 0, 1, 0)

local function scaleNotifHolderMaxNotifs()
    local amountOfNotifsInFrame = math.floor(notifsHolderFrame.AbsoluteSize.Y / 50)
    local notifsHolderFramePadding = amountOfNotifsInFrame * notifHolderListLayout.Padding.Offset
    notifsHolderFrame.Size = UDim2.new(0.3, 0, 0, amountOfNotifsInFrame * 50 + notifsHolderFramePadding)
end

local function deleteNotifsOutsideFrame()
    if notifHolderListLayout.AbsoluteContentSize.Y < notifsHolderFrame.AbsoluteSize.Y then return end
    for _, notif in pairs(notifsHolderFrame:GetChildren()) do
        if not notif:IsA("Frame") then continue end
        if notif.AbsolutePosition.Y + notif.AbsoluteSize.Y < notifsHolderFrame.AbsolutePosition.Y then
            notif:Destroy()
        end
    end
end

function Notification.new(notifType, heading, body, autoRemove, autoRemoveTime, callback)
    local notificationTypes = {
        ["error"] = errorTemplate,
        ["info"] = infoTemplate,
        ["message"] = messageTemplate,
        ["success"] = successTemplate,
        ["warning"] = warningTemplate
    }

    local notif = notificationTypes[notifType:lower()]
    assert(notif, "Notification type not valid\nValid Types: {\n\tError\n\tInfo\n\tMessage\n\tSuccess\n\tWarning\n}")
    notif = notif:Clone()
    notif.templateFrame.BackgroundTransparency = 1
    notif.templateFrame.severityFrame.BackgroundTransparency = 1
    notif.templateFrame.cornerHidingFrame.BackgroundTransparency = 1
    notif.templateFrame.progressBarFrame.BackgroundTransparency = 1
    notif.templateFrame.informationFrame.headingText.TextTransparency = 1
    notif.templateFrame.informationFrame.bodyText.TextTransparency = 1
    notif.templateFrame.closeButton.ImageTransparency = 1
    if notif.templateFrame:FindFirstChild("image") then
        notif.templateFrame.image.ImageTransparency = 1
    end
    notif.templateFrame.Size = UDim2.new(0.8, 0, 0.8, 0)
    notif.templateFrame.Position = UDim2.new(1, 50, 0, 0)

    local function checkTextSize()
        local infoFrame = notif.templateFrame.informationFrame
        local requiredHeadingSize = txtS:GetTextSize(infoFrame.headingText.Text, infoFrame.headingText.TextSize, infoFrame.headingText.Font, Vector2.new(10000, 10000)).Y
        local requiredBodySize = txtS:GetTextSize(infoFrame.bodyText.Text, infoFrame.bodyText.TextSize, infoFrame.bodyText.Font, Vector2.new(notifsHolderFrame.AbsoluteSize.X - 80, 10000)).Y
        local totalHeight = requiredHeadingSize + requiredBodySize + 15 + 5
        if totalHeight > 50 then
            notif.Size = UDim2.new(1, 0, 0, totalHeight)
            notif.templateFrame.Size = UDim2.new(1, 0, 1, 0)
        end
        if txtS:GetTextSize(infoFrame.headingText.Text, infoFrame.headingText.TextSize, infoFrame.headingText.Font, Vector2.new(10000, 10000)).X + 80 > notifsHolderFrame.AbsoluteSize.X then
            warn("Heading size is too long (Notification Library)")
        end
        if txtS:GetTextSize(infoFrame.bodyText.Text, infoFrame.bodyText.TextSize, infoFrame.bodyText.Font, Vector2.new(10000, 10000)).X + 80 > notifsHolderFrame.AbsoluteSize.X then
            warn("Body size is too long (Notification Library)")
        end
    end

    local function openNotif()
        pcall(function() openSound:Play() end)
        local tweenIn = ts:Create(notif.templateFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Position = UDim2.new(0, 0, 0, 0),
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 0
        })
        local severityTween = ts:Create(notif.templateFrame.severityFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundTransparency = 0
        })
        local cornerHidingTween = ts:Create(notif.templateFrame.cornerHidingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundTransparency = 0
        })
        local progressBarTween = ts:Create(notif.templateFrame.progressBarFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundTransparency = 0
        })
        local headingTween = ts:Create(notif.templateFrame.informationFrame.headingText, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            TextTransparency = 0
        })
        local bodyTween = ts:Create(notif.templateFrame.informationFrame.bodyText, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            TextTransparency = 0
        })
        local closeButtonTween = ts:Create(notif.templateFrame.closeButton, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            ImageTransparency = 0
        })
        tweenIn:Play()
        severityTween:Play()
        cornerHidingTween:Play()
        progressBarTween:Play()
        headingTween:Play()
        bodyTween:Play()
        closeButtonTween:Play()
        if notif.templateFrame:FindFirstChild("image") then
            task.wait(0.1) -- Delay kecil untuk ikon
            local imageTween = ts:Create(notif.templateFrame.image, TweenInfo.new(0.4, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 24, 0, 24),
                ImageTransparency = 0
            })
            notif.templateFrame.image.Size = UDim2.new(0, 20, 0, 20)
            imageTween:Play()
        end
    end

    local function closeNotif()
        coroutine.wrap(function()
            pcall(function() closeSound:Play() end)
            local tweenOut = ts:Create(notif.templateFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                Position = UDim2.new(1, 50, 0, 0),
                Size = UDim2.new(0.8, 0, 0.8, 0),
                BackgroundTransparency = 1
            })
            local severityTween = ts:Create(notif.templateFrame.severityFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                BackgroundTransparency = 1
            })
            local cornerHidingTween = ts:Create(notif.templateFrame.cornerHidingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                BackgroundTransparency = 1
            })
            local progressBarTween = ts:Create(notif.templateFrame.progressBarFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                BackgroundTransparency = 1
            })
            local headingTween = ts:Create(notif.templateFrame.informationFrame.headingText, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                TextTransparency = 1
            })
            local bodyTween = ts:Create(notif.templateFrame.informationFrame.bodyText, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                TextTransparency = 1
            })
            local closeButtonTween = ts:Create(notif.templateFrame.closeButton, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
                ImageTransparency = 1
            })
            tweenOut:Play()
            severityTween:Play()
            cornerHidingTween:Play()
            progressBarTween:Play()
            headingTween:Play()
            bodyTween:Play()
            closeButtonTween:Play()
            if notif.templateFrame:FindFirstChild("image") then
                local imageTween = ts:Create(notif.templateFrame.image, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
                    Size = UDim2.new(0, 20, 0, 20),
                    ImageTransparency = 1
                })
                imageTween:Play()
            end
            tweenOut.Completed:Wait()
            if callback then callback() end
            notif:Destroy()
        end)()
    end

    notif.templateFrame.closeButton.MouseEnter:Connect(function()
        local hoverTween = ts:Create(notif.templateFrame.closeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 22, 0, 22),
            ImageColor3 = Color3.fromRGB(255, 255, 255)
        })
        hoverTween:Play()
    end)

    notif.templateFrame.closeButton.MouseLeave:Connect(function()
        local leaveTween = ts:Create(notif.templateFrame.closeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 18, 0, 18),
            ImageColor3 = notif.templateFrame.closeButton.ImageColor3
        })
        leaveTween:Play()
    end)

    notif.templateFrame.closeButton.MouseButton1Click:Connect(closeNotif)
    notif.templateFrame.informationFrame.headingText.Text = heading
    notif.templateFrame.informationFrame.bodyText.Text = body
    notif.Parent = notifsHolderFrame
    checkTextSize()
    openNotif()

    if autoRemove then
        coroutine.wrap(function()
            autoRemoveTime = autoRemoveTime or 5
            local progressBar = notif.templateFrame.progressBarFrame.progressBar
            progressBar.Size = UDim2.new(1, 0, 1, 0)
            local progressTween = ts:Create(progressBar, TweenInfo.new(autoRemoveTime, Enum.EasingStyle.Linear), {
                Size = UDim2.new(0, 0, 1, 0)
            })
            progressTween:Play()
            task.wait(autoRemoveTime)
            if notif and notif:FindFirstChild("templateFrame") then
                closeNotif()
            end
        end)()
    else
        notif.templateFrame.progressBarFrame.Visible = false
    end

    local newNotif = setmetatable({}, Notification)
    newNotif.Instance = notif
    newNotif.Heading = heading
    newNotif.Body = body
    newNotif.Type = notifType:lower()
    newNotif.IsClosing = false

    return newNotif
end

function Notification:changeHeading(newHeading)
    coroutine.wrap(function()
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        self.Instance.templateFrame.informationFrame.headingText.Text = newHeading
        self.Heading = newHeading
    end)()
end

function Notification:changeBody(newBody)
    coroutine.wrap(function()
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        self.Instance.templateFrame.informationFrame.bodyText.Text = newBody
        self.Body = newBody
        local requiredBodySize = txtS:GetTextSize(newBody, self.Instance.templateFrame.informationFrame.bodyText.TextSize, self.Instance.templateFrame.informationFrame.bodyText.Font, Vector2.new(notifsHolderFrame.AbsoluteSize.X - 80, 10000)).Y
        local requiredHeadingSize = txtS:GetTextSize(self.Instance.templateFrame.informationFrame.headingText.Text, self.Instance.templateFrame.informationFrame.headingText.TextSize, self.Instance.templateFrame.informationFrame.headingText.Font, Vector2.new(10000, 10000)).Y
        local totalHeight = requiredHeadingSize + requiredBodySize + 15 + 5
        if totalHeight > 50 then
            self.Instance.Size = UDim2.new(1, 0, 0, totalHeight)
            self.Instance.templateFrame.Size = UDim2.new(1, 0, 1, 0)
        end
    end)()
end

function Notification:deleteTimeout(waitTime)
    if self.IsClosing then return end
    self.IsClosing = true
    coroutine.wrap(function()
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        local closeTween = ts:Create(self.Instance.templateFrame, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 50, 0, 0),
            BackgroundTransparency = 1,
            Size = UDim2.new(0.8, 0, 0.8, 0),
            Rotation = -5
        })
        local imageTween = ts:Create(self.Instance.templateFrame.image, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 20, 0, 20)
        })
        waitTime = waitTime or 3
        task.wait(waitTime)
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        pcall(function() closeSound:Play() end)
        closeTween:Play()
        imageTween:Play()
        closeTween.Completed:Wait()
        if self.Instance then
            self.Instance:Destroy()
        end
    end)()
end

function Notification:delete()
    if self.IsClosing then return end
    self.IsClosing = true
    coroutine.wrap(function()
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        local closeTween = ts:Create(self.Instance.templateFrame, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 50, 0, 0),
            BackgroundTransparency = 1,
            Size = UDim2.new(0.8, 0, 0.8, 0),
            Rotation = -5
        })
        local imageTween = ts:Create(self.Instance.templateFrame.image, TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 20, 0, 20)
        })
        pcall(function() closeSound:Play() end)
        closeTween:Play()
        imageTween:Play()
        closeTween.Completed:Wait()
        if self.Instance then
            self.Instance:Destroy()
        end
    end)()
end

function Notification:changeColor(primary, secondary, textColor)
    coroutine.wrap(function()
        if not self.Instance or not self.Instance:FindFirstChild("templateFrame") then return end
        local templateFrame = self.Instance.templateFrame
        
        if primary then
            templateFrame.BackgroundColor3 = primary
            templateFrame.cornerHidingFrame.BackgroundColor3 = primary
            templateFrame.severityFrame.hideSeverityCornerFrame.BackgroundColor3 = primary
            templateFrame.UIGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, primary),
                ColorSequenceKeypoint.new(1, primary:Lerp(Color3.fromRGB(200, 200, 200), 0.3))
            })
        end

        if secondary then
            templateFrame.severityFrame.BackgroundColor3 = secondary
            templateFrame.closeButton.ImageColor3 = secondary
            templateFrame.UIStroke.Color = secondary
            templateFrame.informationFrame.headingText.UIStroke.Color = secondary
            if self.Type ~= "message" then
                templateFrame.image.ImageColor3 = secondary
            end
            templateFrame.progressBarFrame.BackgroundColor3 = secondary
            templateFrame.progressBarFrame.UIGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, secondary),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1, secondary)
            })
        end

        if textColor then
            templateFrame.informationFrame.headingText.TextColor3 = textColor
            templateFrame.informationFrame.bodyText.TextColor3 = textColor
        end
    end)()
end

scaleNotifHolderMaxNotifs()
notifHolderListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(deleteNotifsOutsideFrame)
return Notification
